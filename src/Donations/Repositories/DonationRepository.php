<?php

namespace GiveGoogleAnalytics\Donations\Repositories;

use GiveGoogleAnalytics\Donations\ValueObjects\DonationMetaKeys;
use GiveGoogleAnalytics\GoogleAnalytics\DataTransferObjects\CampaignDTO;
use GiveGoogleAnalytics\GoogleAnalytics\GA4\DataTransferObjects\GoogleAnalyticsSession;

/**
 * @since 2.0.0
 */
class DonationRepository
{
    /**
     * This function returns whether event sent to google analytics.
     *
     * @since 2.0.0
     */
    public function isGoogleAnalyticEventSent(int $donationId): bool
    {
        return '1' === give_get_meta($donationId, DonationMetaKeys::GA_EVENT_SENT, true);
    }

    /**
     * This function returns whether event sent to google analytics.
     *
     * @since 2.0.0
     */
    public function setGoogleAnalyticEventSent(int $donationId): bool
    {
        return give_update_payment_meta($donationId, DonationMetaKeys::GA_EVENT_SENT, true);
    }

    /**
     * This function returns stored Google Analytics campaign data from donation metadata.
     *
     * @since 2.0.0
     */
    public function getGoogleAnalyticsCampaign(int $donationId): CampaignDTO
    {
        $campaign = new CampaignDTO();

        $campaign->campaignName = give_get_meta($donationId, DonationMetaKeys::GA_CAMPAIGN_NAME, true);
        $campaign->campaignSource = give_get_meta($donationId, DonationMetaKeys::GA_CAMPAIGN_SOURCE, true);
        $campaign->campaignMedium = give_get_meta($donationId, DonationMetaKeys::GA_CAMPAIGN_MEDIUM, true);
        $campaign->campaignContent = give_get_meta($donationId, DonationMetaKeys::GA_CAMPAIGN_CONTENT, true);

        return $campaign;
    }

    /**
     * This function returns google tracking id for donor.
     *
     * @since 2.0.0
     */
    public function getGoogleAnalyticsClientTrackingId(int $donationId): string
    {
        return give_get_meta($donationId, DonationMetaKeys::GA_CLIENT_ID, true);
    }

    /**
     * This function return Google client session value which generated by Google Analytics on client side for every new client.
     *
     * @since 2.0.0
     */
    public function getGoogleAnalyticsClientSession(int $donationId): GoogleAnalyticsSession
    {
        return GoogleAnalyticsSession::fromDonationMetaDataValue(
            give_get_meta(
                $donationId,
                DonationMetaKeys::GA_CLIENT_SESSION_ID,
                true
            )
        );
    }
}
