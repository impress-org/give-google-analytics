{"version":3,"file":"googleAnalyticsFormBuilderExtension.js","mappings":";;;;;;;;;;;;;;;AACkC;AAElC,MAAM;EAAEC;AAAK,CAAC,GAAGD,iDAAQ;AAEzB,MAAME,QAAQ,GAAG;EACb,GAAGF,iDAAQ;EACXG,IAAI;EACJC;AACJ,CAAC;AAED,MAAMA,IAAI,GAAGA,CAAA,KAAM,IAAI;AACvB,MAAMD,IAAI,GAAGA,CAAA,KAAM,IAAI;AAEvB,MAAME,eAA+D,GAAG;EACpEJ,IAAI;EACJC;AACJ,CAAC;AAED,iEAAeG,eAAe;;;;;;;;;;;;;;;;AClBK;AAEnC,MAAML,QAA4B,GAAG;EACjCC,IAAI,EAAE,0CAA0C;EAChDM,KAAK,EAAED,mDAAE,CAAC,kBAAkB,EAAE,uBAAuB,CAAC;EACtDE,WAAW,EAAEF,mDAAE,CAAC,0CAA0C,EAAE,uBAAuB,CAAC;EACpFG,QAAQ,EAAE,QAAQ;EAClBC,QAAQ,EAAE;IACNC,QAAQ,EAAE;EACd,CAAC;EACDC,UAAU,EAAE;IACRC,UAAU,EAAE;MACRC,IAAI,EAAE,QAAQ;MACdC,OAAO,EAAE;IACb,CAAC;IACDC,WAAW,EAAE;MACTF,IAAI,EAAE,QAAQ;MACdC,OAAO,EAAE;IACb,CAAC;IACDE,gBAAgB,EAAE;MACdH,IAAI,EAAE,QAAQ;MACdC,OAAO,EAAE;IACb,CAAC;IACDG,gBAAgB,EAAE;MACdJ,IAAI,EAAE,QAAQ;MACdC,OAAO,EAAE;IACb;EACJ;AACJ,CAAC;AAED,iEAAef,QAAQ;;;;;;;;;;AC/BvB;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACLsC;AAmBtC;AACAmB,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,MAAM,CAACC,QAAQ,CAC9BlB,mDAAoB,EACpBA,uDACJ,CAAC,C","sources":["webpack://give-google-analytics/./src/FormExtension/FormBuilder/Block/index.tsx","webpack://give-google-analytics/./src/FormExtension/FormBuilder/Block/metadata.ts","webpack://give-google-analytics/external window [\"wp\",\"i18n\"]","webpack://give-google-analytics/webpack/bootstrap","webpack://give-google-analytics/webpack/runtime/compat get default export","webpack://give-google-analytics/webpack/runtime/define property getters","webpack://give-google-analytics/webpack/runtime/hasOwnProperty shorthand","webpack://give-google-analytics/webpack/runtime/make namespace object","webpack://give-google-analytics/./src/FormExtension/FormBuilder/index.ts"],"sourcesContent":["import type { BlockConfiguration } from \"@wordpress/blocks\";\nimport metadata from \"./metadata\";\n\nconst { name } = metadata;\n\nconst settings = {\n    ...metadata,\n    save,\n    edit,\n};\n\nconst edit = () => null;\nconst save = () => null;\n\nconst googleAnalytics: { name: string; settings: BlockConfiguration } = {\n    name,\n    settings,\n};\n\nexport default googleAnalytics;\n","import type {BlockConfiguration} from '@wordpress/blocks';\nimport {__} from '@wordpress/i18n';\n\nconst metadata: BlockConfiguration = {\n    name: 'givewp-google-analytics/google-analytics',\n    title: __('Google Analytics', 'give-google-analytics'),\n    description: __('Hidden field to manage google analytics.', 'give-google-analytics'),\n    category: 'addons',\n    supports: {\n        multiple: false,\n    },\n    attributes: {\n        trackingId: {\n            type: 'string',\n            default: '',\n        },\n        affiliation: {\n            type: 'string',\n            default: '',\n        },\n        trackingCategory: {\n            type: 'string',\n            default: '',\n        },\n        trackingListName: {\n            type: 'string',\n            default: '',\n        },\n    },\n};\n\nexport default metadata;\n","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import type { BlockConfiguration } from \"@wordpress/blocks\";\nimport googleAnalytics from \"./Block\";\n\ndeclare global {\n    interface Window {\n        gtag: any;\n        givewp: {\n            form: {\n                blocks: {\n                    register: (\n                        name: string,\n                        settings: BlockConfiguration\n                    ) => void;\n                };\n                slots: any;\n            };\n        };\n    }\n}\n\n// @ts-ignore\nwindow.givewp.form.blocks.register(\n    googleAnalytics.name,\n    googleAnalytics.settings\n);\n"],"names":["metadata","name","settings","save","edit","googleAnalytics","__","title","description","category","supports","multiple","attributes","trackingId","type","default","affiliation","trackingCategory","trackingListName","window","givewp","form","blocks","register"],"sourceRoot":""}